? hammant.patch
? src/test
Index: pom.xml
===================================================================
RCS file: /cvsroot/webdav-servlet/webdav-servlet/pom.xml,v
retrieving revision 1.6
diff -r1.6 pom.xml
7c7
< 	<packaging>war</packaging>
---
> 	<packaging>jar</packaging>
Index: src/main/java/net/sf/webdav/LocalFileSystemStorage.java
===================================================================
RCS file: /cvsroot/webdav-servlet/webdav-servlet/src/main/java/net/sf/webdav/LocalFileSystemStorage.java,v
retrieving revision 1.4
diff -r1.4 LocalFileSystemStorage.java
71c71,82
< 			root = new File(rootPath);
---
>             if (rootPath.equals("*WAR-FILE-ROOT*")) {
>                 String file = LocalFileSystemStorage.class.getProtectionDomain().getCodeSource().getLocation().getFile().replace('\\','/');
>                 int ix = file.indexOf("/WEB-INF/");
>                 if (ix != -1) {
>                     rootPath = file.substring(0, ix);
>                 } else {
>                     throw new WebdavException("Could not determine root of war file. Can't extract from path '"
>                             + file + "' for this web container");                    
>                 }
>             }
>             root = new File(rootPath);
> 
Index: src/main/java/net/sf/webdav/WebdavServlet.java
===================================================================
RCS file: /cvsroot/webdav-servlet/webdav-servlet/src/main/java/net/sf/webdav/WebdavServlet.java,v
retrieving revision 1.10
diff -r1.10 WebdavServlet.java
34a35
> import javax.servlet.RequestDispatcher;
176a178
>     private boolean lazyFolderCreationOnPut;
178c180
< 	/**
---
>     /**
218c220,221
< 	}
---
>         lazyFolderCreationOnPut = fParameter.get("lazyFolderCreationOnPut") != null && fParameter.get("lazyFolderCreationOnPut").equals("1");
>     }
653,654d655
< 		String lockOwner = "doGet" + System.currentTimeMillis()
< 				+ req.toString();
656c657,678
< 		if (fResLocks.lock(path, lockOwner, false, 0)) {
---
>         try {
>             if (fStore.isFolder(path)) {
>                 String dftIndxFile = getServletConfig().getInitParameter("default-index-file");
>                 if (dftIndxFile != null) {
>                     resp.sendRedirect(resp.encodeRedirectURL(req.getRequestURI() + dftIndxFile));
>                     return;
>                 }
>             }
>             if (!fStore.objectExists(path)) {
>                 String insteadOf404 = getServletConfig().getInitParameter("instead-of-404");
>                 if (insteadOf404 != null) {
>                     path = insteadOf404;
>                 }
>             }
> 
>         } catch (WebdavException e) {
>         }
> 
>         String lockOwner = "doGet" + System.currentTimeMillis()
>                 + req.toString();
> 
>         if (fResLocks.lock(path, lockOwner, false, 0)) {
672,682c694,706
< 						if (resourceLength > 0) {
< 							if (resourceLength <= Integer.MAX_VALUE) {
< 								resp.setContentLength((int) resourceLength);
< 							} else {
< 								resp.setHeader("content-length", ""
< 										+ resourceLength);
< 								// is "content-length" the right header? is long
< 								// a valid format?
< 							}
< 
< 						}
---
>                         String contLength = getServletConfig().getInitParameter("no-content-length-headers");
>                         if (contLength == null) {
>                             if (resourceLength > 0) {
>                                 if (resourceLength <= Integer.MAX_VALUE) {
>                                     resp.setContentLength((int) resourceLength);
>                                 } else {
>                                     resp.setHeader("content-length", ""
>                                             + resourceLength);
>                                     // is "content-length" the right header? is long
>                                     // a valid format?
>                                 }
>                             }
>                         }
685c709
< 						String mimeType = getServletContext().getMimeType(path);
---
>                         String mimeType = getServletContext().getMimeType(path);
688c712,717
< 						}
---
> 						} else {
>                             int lastSlash = path.replace('\\','/').lastIndexOf('/');
>                             if (path.indexOf(".",lastSlash) == -1) {
>                                 resp.setContentType("text/html");
>                             }
>                         }
889,903c918,932
< 					if (parentPath != null && fStore.isFolder(parentPath)
< 							&& !fStore.isFolder(path)) {
< 						if (!fStore.objectExists(path)) {
< 							fStore.createResource(path);
< 							resp.setStatus(HttpServletResponse.SC_CREATED);
< 						} else {
< 							resp.setStatus(HttpServletResponse.SC_NO_CONTENT);
< 						}
< 						fStore.setResourceContent(path, req.getInputStream(),
< 								null, null);
< 						resp.setContentLength((int) fStore
< 								.getResourceLength(path));
< 					} else {
< 						resp.sendError(WebdavStatus.SC_CONFLICT);
< 					}
---
>                     if (parentPath != null && !fStore.isFolder(parentPath) && lazyFolderCreationOnPut) {
>                         fStore.createFolder(parentPath);
>                     }
>                     if (!fStore.isFolder(path)) {
>                         if (!fStore.objectExists(path)) {
>                             fStore.createResource(path);
>                             resp.setStatus(HttpServletResponse.SC_CREATED);
>                         } else {
>                             resp.setStatus(HttpServletResponse.SC_NO_CONTENT);
>                         }
>                         fStore.setResourceContent(path, req.getInputStream(),
>                                 null, null);
>                         resp.setContentLength((int) fStore
>                                 .getResourceLength(path));
>                     }
Index: src/main/webapp/WEB-INF/web.xml
===================================================================
RCS file: /cvsroot/webdav-servlet/webdav-servlet/src/main/webapp/WEB-INF/web.xml,v
retrieving revision 1.2
diff -r1.2 web.xml
43c43,51
< 	</servlet>
---
> 	    <init-param>
> 	        <param-name>lazyFolderCreationOnPut</param-name>
> 	        <param-value>0</param-value>
> 	        <description>
> 	            Overriding RFC 2518, the folders of resources being
>                 created, can be created too if they do not exist.
> 	        </description>
> 	    </init-param>
>     </servlet>
