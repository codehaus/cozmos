? hammant.patch
? src/test
Index: pom.xml
===================================================================
RCS file: /cvsroot/webdav-servlet/webdav-servlet/pom.xml,v
retrieving revision 1.6
diff -r1.6 pom.xml
7c7
< 	<packaging>war</packaging>
---
> 	<packaging>jar</packaging>
Index: src/main/java/net/sf/webdav/LocalFileSystemStorage.java
===================================================================
RCS file: /cvsroot/webdav-servlet/webdav-servlet/src/main/java/net/sf/webdav/LocalFileSystemStorage.java,v
retrieving revision 1.4
diff -r1.4 LocalFileSystemStorage.java
71c71,86
< 			root = new File(rootPath);
---
>             if (rootPath.equals("*WAR-FILE-ROOT*")) {
>                 String file = LocalFileSystemStorage.class.getProtectionDomain().getCodeSource().getLocation().getFile().replace('\\','/');
>                 if (file.charAt(0) == '/' && System.getProperty("os.name").indexOf("Windows") != -1) {
>                     file = file.substring(1, file.length());
>                 }
> 
>                 int ix = file.indexOf("/WEB-INF/");
>                 if (ix != -1) {
>                     rootPath = file.substring(0, ix).replace('/', File.separatorChar);
>                 } else {
>                     throw new WebdavException("Could not determine root of war file. Can't extract from path '"
>                             + file + "' for this web container");                    
>                 }
>             }
>             root = new File(rootPath);
> 
151c166,169
< 			throw new WebdavException(e);
---
>             if (debug == 1)
> 			System.out.println("LocalFileSystemStore.createResource(" + uri
> 					+ ") failed");
>             throw new WebdavException(e);
185c203,206
< 			throw new WebdavException(e);
---
>             if (debug == 1)
> 			System.out.println("LocalFileSystemStore.setResourceContent(" + uri
> 					+ ") failed");
>             throw new WebdavException(e);
253c274,278
< 			throw new WebdavException(e);
---
>             if (debug == 1)
> 			System.out.println("LocalFileSystemStore.getResourceContent(" + uri
> 					+ ") failed");
> 
>             throw new WebdavException(e);
Index: src/main/java/net/sf/webdav/WebdavServlet.java
===================================================================
RCS file: /cvsroot/webdav-servlet/webdav-servlet/src/main/java/net/sf/webdav/WebdavServlet.java,v
retrieving revision 1.10
diff -r1.10 WebdavServlet.java
34a35
> import javax.servlet.RequestDispatcher;
176a178
>     private boolean lazyFolderCreationOnPut;
178c180
< 	/**
---
>     /**
218c220,222
< 	}
---
>         lazyFolderCreationOnPut = fParameter.get("lazyFolderCreationOnPut") != null && fParameter.get("lazyFolderCreationOnPut").equals("1");
> 
>     }
433c437
< 			return (result);
---
>             return (result);
523c527,530
< 		String lockOwner = "doOptions" + System.currentTimeMillis()
---
>         if (fdebug == 1)
>         System.err.println("-- doOptions");
> 
>         String lockOwner = "doOptions" + System.currentTimeMillis()
559c566,570
< 		// Retrieve the resources
---
>         if (fdebug == 1)
>         System.err.println("-- doPropfind");
> 
> 
>         // Retrieve the resources
629c640,644
< 		if (readOnly) {
---
>         if (fdebug == 1)
>         System.err.println("-- doProppatch");
> 
> 
>         if (readOnly) {
653,656c668,695
< 		String lockOwner = "doGet" + System.currentTimeMillis()
< 				+ req.toString();
< 		String path = getRelativePath(req);
< 		if (fResLocks.lock(path, lockOwner, false, 0)) {
---
> 
>         String path = getRelativePath(req);
> 
>         if (fdebug == 1)
>         System.err.println("-- doGet " + path);
> 
>         try {
>             if (fStore.isFolder(path)) {
>                 String dftIndxFile = getServletConfig().getInitParameter("default-index-file");
>                 if (dftIndxFile != null) {
>                     resp.sendRedirect(resp.encodeRedirectURL(req.getRequestURI() + dftIndxFile));
>                     return;
>                 }
>             }
>             if (!fStore.objectExists(path)) {
>                 String insteadOf404 = getServletConfig().getInitParameter("instead-of-404");
>                 if (insteadOf404 != null) {
>                     path = insteadOf404;
>                 }
>             }
> 
>         } catch (WebdavException e) {
>         }
> 
>         String lockOwner = "doGet" + System.currentTimeMillis()
>                 + req.toString();
> 
>         if (fResLocks.lock(path, lockOwner, false, 0)) {
672,682c711,723
< 						if (resourceLength > 0) {
< 							if (resourceLength <= Integer.MAX_VALUE) {
< 								resp.setContentLength((int) resourceLength);
< 							} else {
< 								resp.setHeader("content-length", ""
< 										+ resourceLength);
< 								// is "content-length" the right header? is long
< 								// a valid format?
< 							}
< 
< 						}
---
>                         String contLength = getServletConfig().getInitParameter("no-content-length-headers");
>                         if (contLength == null) {
>                             if (resourceLength > 0) {
>                                 if (resourceLength <= Integer.MAX_VALUE) {
>                                     resp.setContentLength((int) resourceLength);
>                                 } else {
>                                     resp.setHeader("content-length", ""
>                                             + resourceLength);
>                                     // is "content-length" the right header? is long
>                                     // a valid format?
>                                 }
>                             }
>                         }
685c726
< 						String mimeType = getServletContext().getMimeType(path);
---
>                         String mimeType = getServletContext().getMimeType(path);
688c729,735
< 						}
---
> 						} else {
>                             int lastSlash = path.replace('\\','/').lastIndexOf('/');
>                             int lastDot = path.indexOf(".", lastSlash);
>                             if (lastDot == -1) {
>                                 resp.setContentType("text/html");
>                             }
>                         }
756a804,805
>         if (fdebug == 1)
>         System.err.println("-- doHead");
760c809,811
< 	/**
---
> 
> 
>     /**
773c824,828
< 		if (req.getContentLength() != 0) {
---
>         if (fdebug == 1)
>         System.err.println("-- doMkcol");
> 
> 
>         if (req.getContentLength() != 0) {
839c894,898
< 		if (!readOnly) {
---
>         if (fdebug == 1)
>         System.err.println("-- doDelete");
> 
> 
>         if (!readOnly) {
882,883c941,946
< 		if (!readOnly) {
< 			String path = getRelativePath(req);
---
> 
>         if (fdebug == 1)
>         System.err.println("-- doPut");
> 
>         if (!readOnly) {
>             String path = getRelativePath(req);
887,903c950,966
< 			if (fResLocks.lock(path, lockOwner, true, -1)) {
< 				try {
< 					if (parentPath != null && fStore.isFolder(parentPath)
< 							&& !fStore.isFolder(path)) {
< 						if (!fStore.objectExists(path)) {
< 							fStore.createResource(path);
< 							resp.setStatus(HttpServletResponse.SC_CREATED);
< 						} else {
< 							resp.setStatus(HttpServletResponse.SC_NO_CONTENT);
< 						}
< 						fStore.setResourceContent(path, req.getInputStream(),
< 								null, null);
< 						resp.setContentLength((int) fStore
< 								.getResourceLength(path));
< 					} else {
< 						resp.sendError(WebdavStatus.SC_CONFLICT);
< 					}
---
>             if (fResLocks.lock(path, lockOwner, true, -1)) {
>                 try {
>                     if (parentPath != null && !fStore.isFolder(parentPath) && lazyFolderCreationOnPut) {
>                         fStore.createFolder(parentPath);
>                     }
>                     if (!fStore.isFolder(path)) {
>                         if (!fStore.objectExists(path)) {
>                             fStore.createResource(path);
>                             resp.setStatus(HttpServletResponse.SC_CREATED);
>                         } else {
>                             resp.setStatus(HttpServletResponse.SC_NO_CONTENT);
>                         }
>                         fStore.setResourceContent(path, req.getInputStream(),
>                                 null, null);
>                         resp.setContentLength((int) fStore
>                                 .getResourceLength(path));
>                     }
905c968
< 					resp.sendError(WebdavStatus.SC_FORBIDDEN);
---
>                     resp.sendError(WebdavStatus.SC_FORBIDDEN);
907c970
< 					resp.sendError(WebdavStatus.SC_INTERNAL_SERVER_ERROR);
---
>                     resp.sendError(WebdavStatus.SC_INTERNAL_SERVER_ERROR);
912c975
< 				resp.sendError(WebdavStatus.SC_INTERNAL_SERVER_ERROR);
---
>                 resp.sendError(WebdavStatus.SC_INTERNAL_SERVER_ERROR);
915c978
< 			resp.sendError(WebdavStatus.SC_FORBIDDEN);
---
>             resp.sendError(WebdavStatus.SC_FORBIDDEN);
935c998,1003
< 		String path = getRelativePath(req);
---
>         if (fdebug == 1)
>         System.err
>                 .println("-- doCopy");
> 
> 
>         String path = getRelativePath(req);
982c1050,1054
< 			String path = getRelativePath(req);
---
>             if (fdebug == 1)
>             System.err.println("-- doMove");
> 
> 
>             String path = getRelativePath(req);
Index: src/main/webapp/WEB-INF/web.xml
===================================================================
RCS file: /cvsroot/webdav-servlet/webdav-servlet/src/main/webapp/WEB-INF/web.xml,v
retrieving revision 1.2
diff -r1.2 web.xml
43c43,51
< 	</servlet>
---
> 	    <init-param>
> 	        <param-name>lazyFolderCreationOnPut</param-name>
> 	        <param-value>0</param-value>
> 	        <description>
> 	            Overriding RFC 2518, the folders of resources being
>                 created, can be created too if they do not exist.
> 	        </description>
> 	    </init-param>
>     </servlet>
